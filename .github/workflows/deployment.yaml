name: Build and Push Docker Image

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Create .env file
      run: |
        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" > .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: akshath6/ipfs-metadata:v1

# The following commented-out section is kept for reference
# name: AWS ECR push

# on:
#   workflow_dispatch:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
  
# jobs:
#   deploy:
#     name: Deploy
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-west-2

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push the image to Amazon ECR
#       id: build-image
#       env:
#         ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }} 
#         ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
#         IMAGE_TAG: latest
#       run: |
#         echo # Build a docker container and push it to ECR 
#         docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" .
#         echo "Pushing image to ECR..."
#         docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
#         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"