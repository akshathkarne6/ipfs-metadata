# The following commented-out section is kept for reference
name: AWS ECR push

on:
  workflow_dispatch:
    inputs:
      ecr_registry:
        description: 'ECR Registry URL'
        default: public.ecr.aws/m8p5h5x9
        required: true
      ecr_repository:
        description: 'ECR Repository Name'
        default: ipfs-metadata
        required: true
      image_tag:
        description: 'Tag for the Docker Image'
        default: latest
        required: true
    
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create .env file
      run: |
        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" > .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ github.event.inputs.ecr_registry }}
        ECR_REPOSITORY: ${{ github.event.inputs.ecr_repository }}
        IMAGE_TAG: ${{ github.event.inputs.image_tag }}
      run: |
        echo # Build a docker container and push it to ECR 
        docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" .
        echo "Pushing image to ECR..."
        docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
